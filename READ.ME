# Task Tracker README

## Overview
This Java program is designed to help users efficiently track and manage their tasks, with the goal of completing each task in under 20 minutes. It features prioritization of tasks that are least frequently attempted, and tracks progress through serialization.

## Features
- **Task Prioritization**: Automatically prioritizes tasks based on frequency of attempts, focusing on tasks that are least frequently performed.
- **Performance Timing**: Each task is timed, with the objective of completing tasks within 20 minutes.
- **Progress Tracking**: Progress for each task is saved using serialization, allowing users to resume where they left off.

## Getting Started
To run the program, ensure you have Java installed on your system. Navigate to the directory containing the program files and compile the Java classes using the following command:

```bash
javac *.java
```

Then, start the application by running:

```bash
java Main
```

## Directory Structure
The tasks are organized within the `Assignments` directory. The list of tasks is generated from the second level of folders under this directory.

## Task Data
The task data, including the number of attempts and best times, is serialized and saved in a file (`assignments.ser`). This file allows the program to remember the state of each task between sessions.

## Usage
Upon running the main program, you will be presented with several options to manage tasks:
- **View all tasks**: Displays all available tasks with their current status.
- **Select a task**: Allows you to choose a specific task to work on.
- **Random task**: Assigns a random task that has the lowest number of attempts.

Each task can be started, paused, resumed, or reset based on user input commands during the session.

## Note
This program builds on the task collection framework initially created by Falk, which is not included here. The full version can be found in the FINF r

